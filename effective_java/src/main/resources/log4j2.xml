<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--status="WARN" :用于设置log4j2自身内部日志的信息输出级别，默认是OFF-->
<!--monitorInterval="30"  :间隔秒数,自动检测配置文件的变更和重新配置本身-->
<configuration status="WARN" monitorInterval="30">
    <Properties>
        <!--自定义一些常量，之后使用${变量名}引用-->
        <Property name="logFilePath">/opt/spboot/core/log</Property>
        <Property name="logFileName">net-factor</Property>
        <Property name="logPattern">%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight{%-5level} --- [%thread] [%style{%C{5}}{normal,cyan}] [%L] : %msg%n</Property>
    </Properties>
    <!--appenders:定义输出内容,输出格式,输出方式,日志保存策略等,常用其下三种标签[console,File,RollingFile]-->
    <appenders>
        <!--console :控制台输出的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--PatternLayout :输出日志的格式,LOG4J2定义了输出代码, disableAnsi:false,支持彩色打印 ,noConsoleNoAnsi:false,支持彩色打印-->
            <PatternLayout pattern="${logPattern}" disableAnsi="false" noConsoleNoAnsi="false"/>
        </console>
        <!--        filename="${FILE_PATH}/${FILE_NAME}/info.log"-->
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" filename="./out.log"
                     filePattern="${logFilePath}/$${date:yyyy-MM}/${logFileName}_%d{yyyy-MM-dd}_%i.log">
            <!--控制台只输出info及以上级别的信息（onMatch），其他的直接拒绝（onMismatch），根据这个可以特殊定制化-->
            <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="ACCEPT"/>
            <PatternLayout>
                <Pattern>${logPattern}</Pattern> <!--定义日志,输出的格式-->
            </PatternLayout>
            <Policies>
                <!--按天进行分割日志-->
                <TimeBasedTriggeringPolicy/>
                <!--按文件占用空间进行分割日志-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- 切割数量 -->
            <DefaultRolloverStrategy max="50" />
        </RollingFile>

    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <!--Logger节点用来单独指定日志的形式，name为包路径,比如要为org.springframework包下所有日志指定为INFO级别等。 additivity防止重复打印日志-->
        <logger name="org" level="INFO" additivity="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
        </logger>
        <logger name="com" level="DEBUG" additivity="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
        </logger>
        <!-- Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出 -->
        <root level="debug">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
        </root>
    </loggers>
</configuration>